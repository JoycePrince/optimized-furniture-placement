# -*- coding: utf-8 -*-
"""Untitled31.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EzjmX9yBXjs3h13fSyjxECg8izJngo1e
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
data = pd.read_csv('furniture_layout_data.csv')

# Features and target variables
X = data[['room_width', 'room_height', 'num_furniture']]
y = data[['sofa_x', 'sofa_y', 'table_x', 'table_y', 'bed_x', 'bed_y']]

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the model
model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json(force=True)
    room_width = data['room_width']
    room_height = data['room_height']
    num_furniture = data['num_furniture']

    # Make prediction
    prediction = model.predict([[room_width, room_height, num_furniture]])

    # Format the output
    output = {
        'sofa_x': prediction[0][0],
        'sofa_y': prediction[0][1],
        'table_x': prediction[0][2],
        'table_y': prediction[0][3],
        'bed_x': prediction[0][4],
        'bed_y': prediction[0][5]
    }

    return jsonify(output)

if __name__ == '__main__':
    app.run(debug=True)

import matplotlib.pyplot as plt

def visualize_layout_bar(room_width, room_height, furniture_coords):
    # Extract furniture names and their coordinates
    furniture_names = list(furniture_coords.keys())
    x_coords = [coord[0] for coord in furniture_coords.values()]
    y_coords = [coord[1] for coord in furniture_coords.values()]

    # Create subplots for x and y coordinates
    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6))

    # Plot x-coordinates
    ax1.bar(furniture_names, x_coords, color='blue', label='X Coordinates')
    ax1.set_title('X Coordinates of Furniture')
    ax1.set_ylim(0, room_width)
    ax1.set_ylabel('X Position')
    ax1.legend()

    # Plot y-coordinates
    ax2.bar(furniture_names, y_coords, color='green', label='Y Coordinates')
    ax2.set_title('Y Coordinates of Furniture')
    ax2.set_ylim(0, room_height)
    ax2.set_ylabel('Y Position')
    ax2.legend()

    # Display the plot
    plt.tight_layout()
    plt.show()

# Example usage
furniture_coords = {
    'sofa': (1, 1),
    'table': (2, 2),
    'bed': (3, 3)
}
visualize_layout_bar(4, 3, furniture_coords)